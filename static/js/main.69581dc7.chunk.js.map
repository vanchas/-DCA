{"version":3,"sources":["components/main/TotalInfo.jsx","components/main/ItemOfListTransaction.jsx","components/main/Chart.jsx","components/main/Expenses.jsx","components/main/Income.jsx","components/main/Main.jsx","containers/WalletContainer.jsx","store/actions.js","validators/validator.js","store/expenseReducer.js","store/incomeReducer.js","store/rootReducer.js","store/localStorage.js","components/header/Header.jsx","components/footer/Footer.jsx","components/app/App.js","serviceWorker.js","index.js"],"names":["TotalInfo","props","updateBalanceColor","Math","sign","updateIncomesBalance","updateExpensesBalance","incomesTotalSum","expensesTotalSum","arrOfExpensesSums","this","expenses","map","exp","storage","e","push","sum","reduce","a","b","incomesSum","incomes","inc","className","role","style","color","Component","ItemOfListTransaction","transaction","date","comment","Chart","types","bars","sumsOfTypesInPercents","item","i","key","width","type","ind","label","isNaN","Expenses","expensesSumInput","input","setState","expenseSum","value","expensesCommentInput","expenseComment","expensesTypeInput","expenseType","onExpenseAdding","setNewExpense","state","selectedOption","setSelectOption","updateList","exType","random","chartValuesCounter","initialSumsOfTypes","amount","absoluteMaxNum","round","updateTypeAmount","arrOfTypeSums","tp","options","onChange","target","placeholder","defaultValue","onClick","Accordion","defaultActiveKey","Card","Header","Toggle","as","Button","variant","eventKey","Collapse","Body","Info","incomeSumInput","incomeSum","incomeCommentInput","incomeComment","onIncomeAdding","setNewIncome","moment","format","filterValue","length","newIncomes","filter","toLowerCase","search","setFilterValue","title","Main","WalletContainer","mapDispatchToProps","payload","connect","expenseReducer","incomeReducer","valueValidator","string","toString","trim","parseFloat","alert","console","error","initialState","action","concat","Object","assign","rootReducer","combineReducers","persistedState","serializedState","localStorage","getItem","JSON","parse","loadState","store","createStore","subscribe","stringify","setItem","saveState","getState","React","Footer","href","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.69581dc7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './main.scss';\n\nexport default class TotalInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.incomesTotalSum = 0;\n    this.expensesTotalSum = '';\n  }\n\n  updateExpensesBalance() {\n    let arrOfExpensesSums = [];\n    this.props.expenses.map(exp =>\n      exp.storage.map(e => {\n        return arrOfExpensesSums.push(+e.sum);\n      })\n    );\n    return arrOfExpensesSums.reduce((a, b) => a + b, 0);\n  }\n\n  updateIncomesBalance() {\n    let incomesSum = 0;\n    this.props.incomes.map(inc => {\n      return incomesSum += +inc.sum;\n    }, 0);\n    return incomesSum;\n  }\n\n  updateBalanceColor = () => {\n    return (Math.sign(this.updateIncomesBalance() - this.updateExpensesBalance()) <= -1) ? '#7b0000' : '#216f21';\n  }\n\n  render() {\n    return (\n      <div className=\"wallet_info_block font-weight-bold\">\n        <div className=\"balance alert alert-dark\" role=\"alert\">\n          Total balance: &nbsp;\n          <span style={{ color: this.updateBalanceColor() }}>{this.updateIncomesBalance() - this.updateExpensesBalance()}</span>\n        </div>\n        <div className=\"month_expenses alert alert-dark text-dark\">\n          Total expenses: &nbsp; \n          <span>{this.updateExpensesBalance()}</span>\n        </div>\n        <div className=\"month_income alert alert-dark text-dark\">\n          Total incomes: &nbsp;\n          <span>{this.updateIncomesBalance()}</span>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class ItemOfListTransaction extends Component {\n  render() {\n    return (\n      <div className=\"transaction-item text-secondary border-bottom\">\n        <b>{this.props.transaction.sum}</b> -\n        <small> {this.props.transaction.date}</small><br />\n        <span>{this.props.transaction.comment}</span>\n      </div>\n    )\n  }\n}\n","import React from 'react';\n\nexport const Chart = props => {\n  const types = props.types;\n  const data = props.sumsOfTypesInPercents;\n  const bars = data.map((item, i) =>\n    <div key={i}\n      className=\"bar\"\n      style={{ width: item + '%' }}\n    >\n      <span className=\"title\">{types.map((type, ind) => (i === ind) ? type.label : '' )} </span>\n      &nbsp; &nbsp;\n      <span className=\"percent\"> {(isNaN(item)) ? '' : `${item} %`}</span>\n    </div>\n  );\n  return (\n    <div className=\"chart\">\n      {bars}\n    </div>\n  );\n}","import React, { Component } from 'react';\nimport './main.scss';\nimport Select from 'react-select';\nimport ItemOfListTransaction from \"./ItemOfListTransaction\";\nimport { Accordion, Card, Button } from 'react-bootstrap';\nimport { Chart } from './Chart.jsx';\n\nexport default class Expenses extends Component {\n  constructor(props) {\n    super(props);\n    this.options = [\n      { value: 'food', label: 'Food' },\n      { value: 'study', label: 'Study' },\n      { value: 'fun', label: 'Fun' },\n      { value: 'medicine', label: 'Medicine' },\n      { value: 'daily', label: 'Daily' }\n    ];\n    this.types = [\n      { type: 'food', amount: 0 },\n      { type: 'study', amount: 0 },\n      { type: 'fun', amount: 0 },\n      { type: 'medicine', amount: 0 },\n      { type: 'daily', amount: 0 }\n    ];\n    this.state = {\n      expenseSum: '',\n      expenseComment: '',\n      expenseType: '',\n      selectedOption: { value: 'food', label: 'Food' }\n    };\n  }\n\n  expensesSumInput = input => {\n    this.setState({\n      expenseSum: input.value\n    });\n  }\n\n  expensesCommentInput = input => {\n    this.setState({\n      expenseComment: input.value\n    });\n  }\n\n  expensesTypeInput = input => {\n    this.setState({\n      expenseType: input.value\n    });\n  }\n\n  onExpenseAdding = () => {\n    this.props.setNewExpense(\n      this.state.expenseSum,\n      this.state.expenseComment,\n      this.state.selectedOption.value\n    );\n    this.setState({\n      expenseSum: '',\n      expenseComment: '',\n      expenseType: ''\n    });\n  }\n\n  setSelectOption = selectedOption => {\n    this.setState({ selectedOption });\n  }\n\n  updateList = exType => {\n    return this.props.expenses.map(\n      (exp) => (exp.type === exType)\n        ? exp.storage.map(e => {\n          return <ItemOfListTransaction key={Math.random()} transaction={e} />\n        })\n        : ''\n    )\n  }\n\n  chartValuesCounter = () => {\n    const initialSumsOfTypes = [\n      +this.types[0].amount,\n      +this.types[1].amount,\n      +this.types[2].amount,\n      +this.types[3].amount,\n      +this.types[4].amount\n    ];\n\n    const absoluteMaxNum = initialSumsOfTypes.reduce((a, b) => a + b);\n\n    const [first, second, third, fourth, fifth] = [\n      Math.round(initialSumsOfTypes[0] / absoluteMaxNum * 100),\n      Math.round(initialSumsOfTypes[1] / absoluteMaxNum * 100),\n      Math.round(initialSumsOfTypes[2] / absoluteMaxNum * 100),\n      Math.round(initialSumsOfTypes[3] / absoluteMaxNum * 100),\n      Math.round(initialSumsOfTypes[4] / absoluteMaxNum * 100)\n    ];\n\n    const sumsOfTypesInPercents = [first, second, third, fourth, fifth];\n\n    return sumsOfTypesInPercents;\n  }\n\n  updateTypeAmount = exType => {\n    let arrOfTypeSums = [];\n    this.props.expenses.map(\n      exp => (exp.type === exType)\n        ? exp.storage.map(e => {\n          return arrOfTypeSums.push(+e.sum);\n        })\n        : ''\n    )\n    this.types.map(\n      tp => (tp.type === exType)\n        ? tp.amount = arrOfTypeSums.reduce((a, b) => +a + +b, 0)\n        : ''\n    )\n    return arrOfTypeSums.reduce((a, b) => a + b, 0);\n  }\n\n  render() {\n    return (\n      <div className=\"expenses_block\">\n        <div className=\"label-exp-block\">Expenses\n        </div>\n        <div className=\"expenses_input\">\n          <input\n            className=\"expenses_sum_input form-control\"\n            value={this.state.expenseSum}\n            onChange={e => this.expensesSumInput(e.target)}\n            type=\"number\"\n            placeholder=\"expense sum$\" />\n          <Select\n            options={this.options}\n            onChange={this.setSelectOption}\n            defaultValue={this.state.selectedOption}\n          />\n          <input\n            onChange={e => this.expensesCommentInput(e.target)}\n            className=\"expenses_commnet_input form-control\"\n            type=\"text\"\n            value={this.state.expenseComment}\n            placeholder=\"commentary\"\n          />\n          <button className=\"add btn btn-secondary font-weight-bold\"\n            onClick={this.onExpenseAdding}>add</button>\n        </div>\n\n        <Accordion className=\"accordion\" defaultActiveKey=\"0\">\n          <Card>\n            <Card.Header>\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\"\n                className=\"type-btn text-secondary font-weight-bold\">\n                Food: &nbsp;\n                {this.updateTypeAmount('food')}\n              </Accordion.Toggle>\n            </Card.Header>\n            <Accordion.Collapse className=\"card-collapse\" eventKey=\"0\">\n              <Card.Body className=\"card-body\">\n                {this.updateList('food')}\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          <Card>\n            <Card.Header>\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\"\n                className=\"type-btn text-secondary font-weight-bold\">\n                Study: &nbsp;\n                {this.updateTypeAmount('study')}\n              </Accordion.Toggle>\n            </Card.Header>\n            <Accordion.Collapse className=\"card-collapse\" eventKey=\"1\">\n              <Card.Body className=\"card-body\">\n                {this.updateList('study')}\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          <Card>\n            <Card.Header>\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\"\n                className=\"type-btn text-secondary font-weight-bold\">\n                Fun: &nbsp;\n                {this.updateTypeAmount('fun')}\n              </Accordion.Toggle>\n            </Card.Header>\n            <Accordion.Collapse className=\"card-collapse\" eventKey=\"2\">\n              <Card.Body className=\"card-body\">\n                {this.updateList('fun')}\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          <Card>\n            <Card.Header>\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\"\n                className=\"type-btn text-secondary font-weight-bold\">\n                Medicine: &nbsp;\n                {this.updateTypeAmount('medicine')}\n              </Accordion.Toggle>\n            </Card.Header>\n            <Accordion.Collapse className=\"card-collapse\" eventKey=\"3\">\n              <Card.Body className=\"card-body\">\n                {this.updateList('medicine')}\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          <Card>\n            <Card.Header>\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"4\"\n                className=\"type-btn text-secondary font-weight-bold\">\n                Daily: &nbsp;\n                {this.updateTypeAmount('daily')}\n              </Accordion.Toggle>\n            </Card.Header>\n            <Accordion.Collapse className=\"card-collapse\" eventKey=\"4\">\n              <Card.Body className=\"card-body\">\n                {this.updateList('daily')}\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n\n        <Chart types={this.options} sumsOfTypesInPercents={this.chartValuesCounter()} />\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './main.scss';\nimport ItemOfListTransaction from './ItemOfListTransaction';\nimport moment from 'moment';\n\nexport default class Info extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      incomeSum: '',\n      incomeComment: '',\n      filterValue: ''\n    };\n  }\n\n  incomeSumInput = input => {\n    this.setState({\n      incomeSum: input.value\n    })\n  }\n\n  incomeCommentInput = input => {\n    this.setState({\n      incomeComment: input.value\n    })\n  }\n\n  onIncomeAdding = () => {\n    this.props.setNewIncome(\n      this.state.incomeSum,\n      this.state.incomeComment,\n      moment().format(\"MMM Do YY\")\n    );\n    this.setState({\n      incomeSum: '',\n      incomeComment: ''\n    })\n  }\n\n  updateList = () => {\n    if (!this.state.filterValue.length) {\n      return this.props.incomes.map(inc => {\n        return <ItemOfListTransaction key={Math.random()} transaction={inc} />\n      })\n    } else {\n      let newIncomes = this.props.incomes;\n      newIncomes = newIncomes.filter(inc => {\n        return inc.comment.toLowerCase().search(this.state.filterValue.toLowerCase()) !== -1;\n      });\n      return newIncomes.map(inc => {\n        return <ItemOfListTransaction key={Math.random()} transaction={inc} />\n      })\n    }\n  }\n\n  setFilterValue = (value) => {\n    this.setState({ filterValue: value })\n  }\n\n  render() {\n    return (\n      <div className=\"income_block\">\n        <div className=\"label-inc-block\">Incomes</div>\n        <div className=\"income_input\">\n          <input\n            className=\"income_sum_input form-control\"\n            onChange={e => this.incomeSumInput(e.target)}\n            value={this.state.incomeSum}\n            type=\"number\"\n            placeholder=\"income sum$\"\n          />\n          <button className=\"add btn-add-income btn btn-secondary font-weight-bold\"\n            onClick={this.onIncomeAdding}>\n            add\n          </button>\n          <input\n            className=\"income_comment form-control\"\n            type=\"text\"\n            onChange={e => this.incomeCommentInput(e.target)}\n            value={this.state.incomeComment}\n            placeholder=\"commentary\"\n          />\n          <input type=\"text\"\n            onChange={e => this.setFilterValue(e.target.value)}\n            title=\"filter by commentary\"\n            className=\"income_filter form-control\" placeholder=\"filter...\" />\n        </div>\n        <div className=\"income_list\">\n          {this.updateList()}\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './main.scss';\nimport TotalInfo from './TotalInfo';\nimport Expenses from './Expenses';\nimport Income from './Income';\n\nexport default class Main extends Component {\n  render() {\n    return (\n      <main className=\"main\">\n        <TotalInfo\n          // incomesTotalSum={this.props.incomesTotalSum}\n          // expensesTotalSum={this.props.expensesTotalSum}\n          expenses={this.props.expenses}\n          incomes={this.props.incomes}\n        />\n        <Expenses\n          expenses={this.props.expenses}\n          setNewExpense={this.props.setNewExpense}\n        />\n        <Income\n          incomes={this.props.incomes}\n          setNewIncome={this.props.setNewIncome}\n        />\n      </main>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport Main from '../components/main/Main';\nimport { setNewExpense, setNewIncome } from '../store/actions';\nimport { connect } from 'react-redux';\n\nclass WalletContainer extends Component {\n  render() {\n    return (\n      <div>\n        <Main\n          incomes={this.props.incomes}\n          expenses={this.props.expenses}\n          incomesTotalSum={this.props.incomesTotalSum}\n          expensesTotalSum={this.props.expensesTotalSum}\n          setNewExpense={this.props.setNewExpense}\n          setNewIncome={this.props.setNewIncome}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    expenses: state.expenseReducer.expenses,\n    incomes: state.incomeReducer.incomes,\n    expensesTotalSum: state.expenseReducer.expensesTotalSum,\n    incomesTotalSum: state.incomeReducer.incomesTotalSum\n  }\n}\n\nconst mapDispatchToProps = {\n  setNewExpense,\n  setNewIncome\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletContainer);","export const ADD_EXPENSE = 'ADD_EXPENSE';\nexport const ADD_INCOME = 'ADD_INCOME';\n\nexport const setNewExpense = (sum, comment, type) => {\n  return {\n    type: ADD_EXPENSE,\n    payload: {\n      sum,\n      comment,\n      type\n    }\n  }\n}\n\nexport const setNewIncome = (sum, comment, date) => {\n  return {\n    type: ADD_INCOME,\n    payload: {\n      sum,\n      comment,\n      date\n    }\n  }\n}\n\n// export const LOAD_STATE_EXPENSES_ACTION = 'LOAD_STATE_EXPENSES_ACTION';\n// export const LOAD_STATE_INCOMES_ACTION = 'LOAD_STATE_INCOMES_ACTION';\n\n// export const loadStateIncomesAction = incomes => {\n//   return {\n//     type: LOAD_STATE_INCOMES_ACTION,\n//     payload: incomes\n//   }\n// }\n\n// export const loadStateExpensesAction = expenses => {\n//   return {\n//     type: LOAD_STATE_EXPENSES_ACTION,\n//     payload: expenses\n//   }\n// }","export const valueValidator = (string) => {\n  try {\n    if (string &&\n      string.toString().trim().length &&\n      Math.sign(+string) > 0 && \n      !isNaN(parseFloat(string))) {\n\n      return parseFloat(string);\n\n    } else {\n      alert('Enter correct value. It must be a number');\n      console.error('Enter correct value. It must be a number');\n    }\n  } catch (error) {\n    // \n  }\n}","import { ADD_EXPENSE, LOAD_STATE_EXPENSES_ACTION } from './actions';\nimport { valueValidator } from '../validators/validator';\nimport moment from 'moment';\n\nconst initialState = {\n  expenses: [\n    { type: 'food', storage: [] },\n    { type: 'fun', storage: [] },\n    { type: 'medicine', storage: [] },\n    { type: 'daily', storage: [] },\n    { type: 'study', storage: [] }\n  ],\n  expensesTotalSum: 0\n}\n// let sumNum = 0;\n\n// function sum(num) {\n//   return sumNum += +num;\n// }\n\nexport const expenseReducer = (state = initialState, action) => {\n  switch (action.type) {\n\n    case ADD_EXPENSE:\n      if (valueValidator(action.payload.sum)) {\n        return {\n          ...state,\n          // expensesTotalSum: sum(action.payload.sum),\n          expenses: state.expenses.map(exp => {\n            if (exp.type !== action.payload.type) {\n              return exp;\n            }\n            return {\n              ...exp,\n              storage: exp.storage.concat({\n                sum: action.payload.sum,\n                comment: action.payload.comment,\n                type: action.payload.type,\n                date: moment().format(\"MMM Do YY\")\n              })\n            }\n          })\n        }\n      }\n      return state;\n      \n    default:\n      return state;\n  }\n}\nexport default expenseReducer;","import { ADD_INCOME } from './actions';\nimport { valueValidator } from '../validators/validator';\n\nconst initialState = {\n  incomes: [],\n  incomesTotalSum: 0\n}\n\n// let sumNum = 0;\n\n// function sum(num) {\n//   return sumNum += +num;\n// }\n\nconst incomeReducer = (state = initialState, action) => {\n  switch (action.type) {\n\n    case ADD_INCOME:\n      if (valueValidator(action.payload.sum)) {\n        return Object.assign({}, state, {\n          incomes: state.incomes.concat(action.payload),\n          // incomesTotalSum: sum(action.payload.sum)\n        })\n      }\n      return state;\n\n    default:\n      return state;\n  }\n}\nexport default incomeReducer;","import { combineReducers, createStore } from 'redux';\nimport expenseReducer from './expenseReducer';\nimport incomeReducer from './incomeReducer';\nimport { loadState, saveState } from './localStorage';\n\nexport const rootReducer = combineReducers({\n  expenseReducer,\n  incomeReducer\n});\n\nconst persistedState = loadState();\nexport const store = createStore(\n  rootReducer, \n  persistedState\n);\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) return undefined;\n    return JSON.parse(serializedState);\n  } catch (e) {\n    return undefined;\n  }\n}\n\nexport const saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (e) {\n    // \n  }\n}","import React from 'react';\nimport './header.module.scss';\n\nexport default class Header extends React.Component {\n  render() {\n    return (\n      <header>\n        <h1 className=\"h2 pt-3 mb-0 text-center text-secondary\">\n          <span className=\"font-weight-bold\">D</span>aily \n          <span className=\"font-weight-bold\"> C</span>ash \n          <span className=\"font-weight-bold\"> A</span>ccounting\n          </h1>\n      </header>\n    )\n  }\n}","import React, { Component } from 'react'\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <footer className=\"page-footer font-small blue\">\n        <div className=\"h6 footer-copyright text-dark text-center pt-1 pb-3\">\n          © 2020 Copyright:\n          <a className=\"text-secondary\" href=\"https://github.com/vanchas\"> &nbsp;\n          github.com/vanchas\n          </a>\n        </div>\n      </footer>\n    )\n  }\n}\n","import './App.css';\nimport React from 'react';\nimport WalletContainer from '../../containers/WalletContainer';\nimport { Provider } from 'react-redux';\nimport { store } from '../../store/rootReducer';\nimport Header from '../header/Header';\nimport Footer from '../footer/Footer';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App bg-light h-100\">\n          <Header />\n          <WalletContainer state={store.getState()} />\n          <Footer />\n        </div>\n      </Provider>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// serviceWorker.unregister();\nserviceWorker.register();"],"sourceRoot":""}