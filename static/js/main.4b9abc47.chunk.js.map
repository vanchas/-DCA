{"version":3,"sources":["components/main/TotalInfo.jsx","components/main/ItemOfListTransaction.jsx","components/main/Chart.jsx","components/main/Expenses.jsx","components/main/Income.jsx","components/main/Main.jsx","containers/WalletContainer.jsx","store/actions.js","containers/validator.js","store/expenseReducer.js","store/incomeReducer.js","store/rootReducer.js","store/localStorage.js","components/app/App.js","serviceWorker.js","index.js"],"names":["TotalInfo","className","role","this","props","incomesTotalSum","expensesTotalSum","Component","ItemOfListTransaction","transaction","sum","date","comment","Chart","bars","data","map","item","i","key","style","width","isNaN","Expenses","expensesSumInput","input","setState","expenseSum","value","expensesCommentInput","expenseComment","expensesTypeInput","expenseType","onExpenseAdding","setNewExpense","state","selectedOption","types","t","type","amount","setSelectOption","updateList","exType","expenses","exp","storage","e","Math","random","chartValuesCounter","initialSumsOfTypes","absoluteMaxNum","max","round","options","label","name","onChange","target","placeholder","defaultValue","onClick","Accordion","defaultActiveKey","Card","Header","Toggle","as","Button","variant","eventKey","Collapse","Body","Info","incomeSumInput","incomeSum","incomeCommentInput","incomeComment","onIncomeAdding","setNewIncome","moment","format","showBlock","blockMessage","blockClasses","hideBlock","filterValue","length","newIncomes","incomes","filter","inc","toLowerCase","search","setFilterValue","onDoubleClick","title","Main","WalletContainer","mapDispatchToProps","payload","connect","expenseReducer","incomeReducer","valueValidator","string","toString","trim","console","error","initialState","sumNum","num","action","concat","Object","assign","rootReducer","combineReducers","persistedState","serializedState","localStorage","getItem","JSON","parse","loadState","store","createStore","subscribe","stringify","setItem","saveState","getState","App","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4b9abc47.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './main.scss';\r\n\r\nexport default class TotalInfo extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"wallet_info_block font-weight-bold\">\r\n        <div className=\"balance alert alert-dark text-dark\" role=\"alert\">\r\n          Total balance: &nbsp;\r\n          {this.props.incomesTotalSum - this.props.expensesTotalSum}\r\n        </div>\r\n        <div className=\"month_expenses alert alert-dark text-dark\">\r\n          Total expenses: &nbsp;\r\n          {this.props.expensesTotalSum}\r\n        </div>\r\n        <div className=\"month_income alert alert-dark text-dark\">\r\n          Total income: &nbsp;\r\n          {this.props.incomesTotalSum}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class ItemOfListTransaction extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <mark>{this.props.transaction.sum}</mark> - \r\n        <small> {this.props.transaction.date}</small><br/>\r\n        <small>{this.props.transaction.comment}</small>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport const Chart = props => {\r\n  const data = props.data;\r\n  const bars = data.map((item, i) =>\r\n    <div key={i}\r\n      className=\"bar\"\r\n      style={{\r\n        width: item + '%'\r\n      }}\r\n    >\r\n      {(isNaN(item)) ? 0 : item} %\r\n    </div>\r\n  );\r\n  return (\r\n    <div>\r\n      {bars}\r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport './main.scss';\r\nimport Select from 'react-select';\r\nimport ItemOfListTransaction from \"./ItemOfListTransaction\";\r\nimport { Accordion, Card, Button } from 'react-bootstrap';\r\nimport { Chart } from './Chart.jsx';\r\n\r\nexport default class Expenses extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.options = [\r\n      { value: 'food', label: 'Food' },\r\n      { value: 'study', label: 'Study' },\r\n      { value: 'fun', label: 'Fun' },\r\n      { value: 'medicine', label: 'Medicine' },\r\n      { value: 'daily', label: 'Daily' }\r\n    ];\r\n    this.types = [\r\n      { type: 'food', amount: 0 },\r\n      { type: 'study', amount: 0 },\r\n      { type: 'fun', amount: 0 },\r\n      { type: 'medicine', amount: 0 },\r\n      { type: 'daily', amount: 0 }\r\n    ];\r\n    this.state = {\r\n      expenseSum: '',\r\n      expenseComment: '',\r\n      expenseType: '',\r\n      selectedOption: { value: 'food', label: 'Food' }\r\n    };\r\n  }\r\n\r\n  expensesSumInput = input => {\r\n    this.setState({\r\n      expenseSum: input.value\r\n    });\r\n  }\r\n\r\n  expensesCommentInput = input => {\r\n    this.setState({\r\n      expenseComment: input.value\r\n    });\r\n  }\r\n\r\n  expensesTypeInput = input => {\r\n    this.setState({\r\n      expenseType: input.value\r\n    });\r\n  }\r\n\r\n  onExpenseAdding = () => {\r\n    this.props.setNewExpense(\r\n      this.state.expenseSum,\r\n      this.state.expenseComment,\r\n      this.state.selectedOption.value\r\n    );\r\n    this.types.map(t => {\r\n      if (t.type === this.state.selectedOption.value) {\r\n        t.amount += +this.state.expenseSum;\r\n      }\r\n    });\r\n    this.setState({\r\n      expenseSum: '',\r\n      expenseComment: '',\r\n      expenseType: ''\r\n    });\r\n  }\r\n\r\n  setSelectOption = selectedOption => {\r\n    this.setState({ selectedOption });\r\n  }\r\n\r\n  updateList = exType => {\r\n    return this.props.expenses.map((exp) => {\r\n      if (exp.type === exType) {\r\n        return exp.storage.map(e => {\r\n          return <ItemOfListTransaction key={Math.random()} transaction={e} />\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  chartValuesCounter = () => {\r\n    const initialSumsOfTypes = [\r\n      +this.types[0].amount,\r\n      +this.types[1].amount,\r\n      +this.types[2].amount,\r\n      +this.types[3].amount,\r\n      +this.types[4].amount\r\n    ];\r\n\r\n    const absoluteMaxNum = Math.max(initialSumsOfTypes[0], initialSumsOfTypes[1], initialSumsOfTypes[2], initialSumsOfTypes[3], initialSumsOfTypes[4]);\r\n\r\n    const [first, second, third, fourth, fifth] = [\r\n      Math.round(initialSumsOfTypes[0] / absoluteMaxNum * 100),\r\n      Math.round(initialSumsOfTypes[1] / absoluteMaxNum * 100),\r\n      Math.round(initialSumsOfTypes[2] / absoluteMaxNum * 100),\r\n      Math.round(initialSumsOfTypes[3] / absoluteMaxNum * 100),\r\n      Math.round(initialSumsOfTypes[4] / absoluteMaxNum * 100)\r\n    ];\r\n\r\n    const sumsOfTypesInPercents = [first, second, third, fourth, fifth];\r\n\r\n    return sumsOfTypesInPercents;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"expenses_block\">\r\n        <label className=\"interface-toggle-exp\">Expenses\r\n          <input type=\"radio\" name=\"toggle\" />\r\n        </label>\r\n        <div className=\"expenses_input\">\r\n          <input\r\n            className=\"expenses_sum_input form-control\"\r\n            value={this.state.expenseSum}\r\n            onChange={e => this.expensesSumInput(e.target)}\r\n            type=\"number\"\r\n            placeholder=\"expense sum$\" />\r\n          <Select\r\n            options={this.options}\r\n            onChange={this.setSelectOption}\r\n            defaultValue={this.state.selectedOption}\r\n          />\r\n          <input\r\n            onChange={e => this.expensesCommentInput(e.target)}\r\n            className=\"expenses_commnet_input form-control\"\r\n            type=\"text\"\r\n            value={this.state.expenseComment}\r\n            placeholder=\"commentary\"\r\n          />\r\n          <button className=\"add btn btn-secondary font-weight-bold\"\r\n            onClick={this.onExpenseAdding}>add</button>\r\n        </div>\r\n\r\n        <Accordion className=\"accordion\" defaultActiveKey=\"0\">\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\"\r\n                className=\"text-secondary font-weight-bold\">\r\n                Food: &nbsp; {this.types[0].amount}\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse className=\"card-collapse\" eventKey=\"0\">\r\n              <Card.Body className=\"card-body\">\r\n                {this.updateList('food')}\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\"\r\n                className=\"text-secondary font-weight-bold\">\r\n                Study: &nbsp; {this.types[1].amount}\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse className=\"card-collapse\" eventKey=\"1\">\r\n              <Card.Body className=\"card-body\">\r\n                {this.updateList('study')}\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\"\r\n                className=\"text-secondary font-weight-bold\">\r\n                Fun: &nbsp; {this.types[2].amount}\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse className=\"card-collapse\" eventKey=\"2\">\r\n              <Card.Body className=\"card-body\">\r\n                {this.updateList('fun')}\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\"\r\n                className=\"text-secondary font-weight-bold\">\r\n                Medicine: &nbsp; {this.types[3].amount}\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse className=\"card-collapse\" eventKey=\"3\">\r\n              <Card.Body className=\"card-body\">\r\n                {this.updateList('medicine')}\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"4\"\r\n                className=\"text-secondary font-weight-bold\">\r\n                Daily: &nbsp; {this.types[4].amount}\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse className=\"card-collapse\" eventKey=\"4\">\r\n              <Card.Body className=\"card-body\">\r\n                {this.updateList('daily')}\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n        </Accordion>\r\n\r\n        <Chart data={this.chartValuesCounter()} />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './main.scss';\r\nimport ItemOfListTransaction from './ItemOfListTransaction';\r\nimport moment from 'moment';\r\n\r\nexport default class Info extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      incomeSum: '',\r\n      incomeComment: '',\r\n      blockClasses: 'income_block',\r\n      blockMessage: '',\r\n      filterValue: ''\r\n    };\r\n  }\r\n\r\n  incomeSumInput = input => {\r\n    this.setState({\r\n      incomeSum: input.value\r\n    })\r\n  }\r\n\r\n  incomeCommentInput = input => {\r\n    this.setState({\r\n      incomeComment: input.value\r\n    })\r\n  }\r\n\r\n  onIncomeAdding = () => {\r\n    this.props.setNewIncome(\r\n      this.state.incomeSum,\r\n      this.state.incomeComment,\r\n      moment().format(\"MMM Do YY\")\r\n    );\r\n    this.setState({\r\n      incomeSum: '',\r\n      incomeComment: ''\r\n    })\r\n  }\r\n\r\n  showBlock = () => {\r\n    this.setState({\r\n      blockMessage: 'double-click to hide',\r\n      blockClasses: `${this.state.blockClasses} choose-inc`\r\n    })\r\n  }\r\n\r\n  hideBlock = () => {\r\n    this.setState({\r\n      blockMessage: '',\r\n      blockClasses: 'income_block'\r\n    })\r\n  }\r\n\r\n  updateList = () => {\r\n    if (!this.state.filterValue.length) {\r\n      return this.props.incomes.map(inc => {\r\n        return <ItemOfListTransaction key={Math.random()} transaction={inc} />\r\n      })\r\n    } else {\r\n      let newIncomes = this.props.incomes;\r\n        newIncomes = newIncomes.filter(inc => {\r\n          return inc.comment.toLowerCase().search(this.state.filterValue.toLowerCase()) !== -1;\r\n        });\r\n        return newIncomes.map(inc => {\r\n          return <ItemOfListTransaction key={Math.random()} transaction={inc} />\r\n        })\r\n    }\r\n  }\r\n\r\n  setFilterValue = (value) => {\r\n    this.setState({ filterValue: value })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.state.blockClasses}\r\n        onDoubleClick={this.hideBlock}\r\n        onClick={this.showBlock}\r\n      >\r\n        <label className=\"interface-toggle-inc\">\r\n          <span className=\" font-weight-light float-left h5\">\r\n            {this.state.blockMessage}</span>\r\n          Incomes\r\n          <input\r\n            type=\"radio\" name=\"toggle\"\r\n          />\r\n        </label>\r\n\r\n        <div className=\"income_input\">\r\n          <input\r\n            className=\"income_sum_input form-control\"\r\n            onChange={e => this.incomeSumInput(e.target)}\r\n            value={this.state.incomeSum}\r\n            type=\"number\"\r\n            placeholder=\"income sum$\"\r\n          />\r\n          <button className=\"btn-add-income btn btn-secondary font-weight-bold\"\r\n            onClick={this.onIncomeAdding}>\r\n            add\r\n          </button>\r\n          <input\r\n            className=\"income_comment form-control\"\r\n            type=\"text\"\r\n            onChange={e => this.incomeCommentInput(e.target)}\r\n            value={this.state.incomeComment}\r\n            placeholder=\"commentary\"\r\n          />\r\n          <input type=\"text\"\r\n            onChange={e => this.setFilterValue(e.target.value)}\r\n            title=\"filter by commentary\"\r\n            className=\"income_filter form-control\" placeholder=\"filter...\" />\r\n        </div>\r\n        <div className=\"income_list\">\r\n          {this.updateList()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './main.scss';\r\nimport TotalInfo from './TotalInfo';\r\nimport Expenses from './Expenses';\r\nimport Income from './Income';\r\n\r\nexport default class Main extends Component {\r\n  render() {\r\n    return (\r\n      <main className=\"main\">\r\n        <TotalInfo\r\n          incomesTotalSum={this.props.incomesTotalSum}\r\n          expensesTotalSum={this.props.expensesTotalSum}\r\n        />\r\n        <Expenses\r\n          expenses={this.props.expenses}\r\n          setNewExpense={this.props.setNewExpense}\r\n        />\r\n        <Income\r\n          incomes={this.props.incomes}\r\n          setNewIncome={this.props.setNewIncome}\r\n        />\r\n      </main>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Main from '../components/main/Main';\r\nimport { setNewExpense, setNewIncome } from '../store/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass WalletContainer extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Main\r\n          incomes={this.props.incomes}\r\n          expenses={this.props.expenses}\r\n          incomesTotalSum={this.props.incomesTotalSum}\r\n          expensesTotalSum={this.props.expensesTotalSum}\r\n          setNewExpense={this.props.setNewExpense}\r\n          setNewIncome={this.props.setNewIncome}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    expenses: state.expenseReducer.expenses,\r\n    incomes: state.incomeReducer.incomes,\r\n    expensesTotalSum: state.expenseReducer.expensesTotalSum,\r\n    incomesTotalSum: state.incomeReducer.incomesTotalSum\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setNewExpense,\r\n  setNewIncome\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletContainer);","export const ADD_EXPENSE = 'ADD_EXPENSE';\r\nexport const ADD_INCOME = 'ADD_INCOME';\r\n\r\nexport const setNewExpense = (sum, comment, type) => {\r\n  return {\r\n    type: ADD_EXPENSE,\r\n    payload: {\r\n      sum,\r\n      comment,\r\n      type\r\n    }\r\n  }\r\n}\r\n\r\nexport const setNewIncome = (sum, comment, date) => {\r\n  return {\r\n    type: ADD_INCOME,\r\n    payload: {\r\n      sum,\r\n      comment,\r\n      date\r\n    }\r\n  }\r\n}","export const valueValidator = (string) => {\r\n  if (string && string.toString().trim().length) {\r\n    return string;\r\n  } else {\r\n    console.error('Enter correct value');\r\n  }\r\n}","import { ADD_EXPENSE } from './actions';\r\nimport { valueValidator } from '../containers/validator';\r\nimport moment from 'moment';\r\n\r\nconst initialState = {\r\n  expenses: [\r\n    { type: 'food', storage: [\r\n      // {sum: 10, comment: 'test', date: '20 5 20'},\r\n      // {sum: 9, comment: 'test', date: '20 5 20'},\r\n      // {sum: 11, comment: 'test', date: '20 5 20'},\r\n      // {sum: 11, comment: 'test', date: '20 5 20'},\r\n      // {sum: 11, comment: 'test', date: '20 5 20'},\r\n      // {sum: 11, comment: 'test', date: '20 5 20'},\r\n      // {sum: 11, comment: 'test', date: '20 5 20'},\r\n      // {sum: 11, comment: 'test', date: '20 5 20'},\r\n      // {sum: 11, comment: 'test', date: '20 5 20'},\r\n      // {sum: 11, comment: 'test', date: '20 5 20'},\r\n      // {sum: 12, comment: 'test', date: '20 5 20'}\r\n    ] },\r\n    { type: 'fun', storage: [] },\r\n    { type: 'medicine', storage: [] },\r\n    { type: 'daily', storage: [] },\r\n    { type: 'study', storage: [] }\r\n  ],\r\n  expensesTotalSum: 0\r\n}\r\nlet sumNum = 0;\r\n\r\nfunction sum(num) {\r\n  return sumNum += +num;\r\n}\r\n\r\nexport const expenseReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case ADD_EXPENSE:\r\n      if (valueValidator(action.payload.sum)) {\r\n        return {\r\n          ...state,\r\n          expensesTotalSum: sum(action.payload.sum),\r\n          expenses: state.expenses.map(exp => {\r\n            if (exp.type !== action.payload.type) {\r\n              return exp;\r\n            }\r\n            return {\r\n              ...exp,\r\n              storage: exp.storage.concat({\r\n                sum: action.payload.sum,\r\n                comment: action.payload.comment,\r\n                type: action.payload.type,\r\n                date: moment().format(\"MMM Do YY\")\r\n              })\r\n            }\r\n          })\r\n        }\r\n      }\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default expenseReducer;","import { ADD_INCOME } from './actions';\r\nimport { valueValidator } from '../containers/validator';\r\n\r\nconst initialState = {\r\n  incomes: [],\r\n  incomesTotalSum: 0\r\n}\r\n\r\nlet sumNum = 0;\r\n\r\nfunction sum(num) {\r\n  return sumNum += +num;\r\n}\r\n\r\nconst incomeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case ADD_INCOME:\r\n      if (valueValidator(action.payload.sum)) {\r\n        return Object.assign({}, state, {\r\n          incomes: state.incomes.concat(action.payload),\r\n          incomesTotalSum: sum(action.payload.sum)\r\n        })\r\n      }\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default incomeReducer;","import { combineReducers, createStore } from 'redux';\r\nimport expenseReducer from './expenseReducer';\r\nimport incomeReducer from './incomeReducer';\r\nimport { loadState, saveState } from './localStorage';\r\n\r\nexport const rootReducer = combineReducers({\r\n  expenseReducer,\r\n  incomeReducer\r\n})\r\n\r\nconst persistedState = loadState();\r\nexport const store = createStore(\r\n  rootReducer, \r\n  persistedState\r\n);\r\n\r\nstore.subscribe(() => {\r\n  saveState(store.getState());\r\n})","export const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('state');\r\n    if (serializedState === null) return undefined;\r\n    return JSON.parse(serializedState);\r\n  } catch (e) {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch (e) {\r\n    // \r\n  }\r\n}","import './App.css';\nimport React from 'react';\nimport WalletContainer from '../../containers/WalletContainer';\nimport { Provider } from 'react-redux';\nimport { store } from '../../store/rootReducer';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <WalletContainer state={store.getState()} />\n        </div>\n      </Provider>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}